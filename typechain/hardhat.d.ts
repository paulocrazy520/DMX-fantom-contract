/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "IAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAdmin__factory>;
    getContractFactory(
      name: "TokenManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenManager__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "IPancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter__factory>;
    getContractFactory(
      name: "PancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeFactory__factory>;
    getContractFactory(
      name: "PancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakePair__factory>;
    getContractFactory(
      name: "PancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PancakeRouter__factory>;
    getContractFactory(
      name: "UniFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniFactory__factory>;
    getContractFactory(
      name: "UniNftManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniNftManager__factory>;
    getContractFactory(
      name: "UniPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniPool__factory>;
    getContractFactory(
      name: "BasePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePositionManager__factory>;
    getContractFactory(
      name: "GlpManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GlpManager__factory>;
    getContractFactory(
      name: "IBasePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePositionManager__factory>;
    getContractFactory(
      name: "IGlpManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGlpManager__factory>;
    getContractFactory(
      name: "IOrderBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOrderBook__factory>;
    getContractFactory(
      name: "IPositionRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPositionRouter__factory>;
    getContractFactory(
      name: "IPositionRouterCallbackReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPositionRouterCallbackReceiver__factory>;
    getContractFactory(
      name: "IRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouter__factory>;
    getContractFactory(
      name: "IShortsTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShortsTracker__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IVaultPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultPriceFeed__factory>;
    getContractFactory(
      name: "IVaultUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultUtils__factory>;
    getContractFactory(
      name: "OrderBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderBook__factory>;
    getContractFactory(
      name: "PositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionManager__factory>;
    getContractFactory(
      name: "PositionRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionRouter__factory>;
    getContractFactory(
      name: "Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Router__factory>;
    getContractFactory(
      name: "ShortsTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortsTracker__factory>;
    getContractFactory(
      name: "MaliciousTraderTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaliciousTraderTest__factory>;
    getContractFactory(
      name: "PositionRouterCallbackReceiverTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionRouterCallbackReceiverTest__factory>;
    getContractFactory(
      name: "ShortsTrackerTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortsTrackerTest__factory>;
    getContractFactory(
      name: "VaultTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultTest__factory>;
    getContractFactory(
      name: "Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vault__factory>;
    getContractFactory(
      name: "VaultErrorController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultErrorController__factory>;
    getContractFactory(
      name: "VaultPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultPriceFeed__factory>;
    getContractFactory(
      name: "VaultUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultUtils__factory>;
    getContractFactory(
      name: "GMT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GMT__factory>;
    getContractFactory(
      name: "IGMT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGMT__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "EsGMX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EsGMX__factory>;
    getContractFactory(
      name: "GLP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GLP__factory>;
    getContractFactory(
      name: "GMX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GMX__factory>;
    getContractFactory(
      name: "GmxFloor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxFloor__factory>;
    getContractFactory(
      name: "GmxIou",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxIou__factory>;
    getContractFactory(
      name: "GmxMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxMigrator__factory>;
    getContractFactory(
      name: "IAmmRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAmmRouter__factory>;
    getContractFactory(
      name: "IGmxIou",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxIou__factory>;
    getContractFactory(
      name: "IGmxMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxMigrator__factory>;
    getContractFactory(
      name: "MigrationHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MigrationHandler__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "FastPriceEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastPriceEvents__factory>;
    getContractFactory(
      name: "FastPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FastPriceFeed__factory>;
    getContractFactory(
      name: "IChainlinkFlags",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkFlags__factory>;
    getContractFactory(
      name: "IFastPriceEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastPriceEvents__factory>;
    getContractFactory(
      name: "IFastPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFastPriceFeed__factory>;
    getContractFactory(
      name: "IPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceFeed__factory>;
    getContractFactory(
      name: "ISecondaryPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISecondaryPriceFeed__factory>;
    getContractFactory(
      name: "PriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceFeed__factory>;
    getContractFactory(
      name: "BalanceUpdater",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalanceUpdater__factory>;
    getContractFactory(
      name: "BatchSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchSender__factory>;
    getContractFactory(
      name: "EsGmxBatchSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EsGmxBatchSender__factory>;
    getContractFactory(
      name: "GmxTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GmxTimelock__factory>;
    getContractFactory(
      name: "IGmxTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGmxTimelock__factory>;
    getContractFactory(
      name: "IHandlerTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHandlerTarget__factory>;
    getContractFactory(
      name: "ITimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimelock__factory>;
    getContractFactory(
      name: "ITimelockTarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITimelockTarget__factory>;
    getContractFactory(
      name: "OrderBookReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OrderBookReader__factory>;
    getContractFactory(
      name: "PriceFeedTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceFeedTimelock__factory>;
    getContractFactory(
      name: "Reader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reader__factory>;
    getContractFactory(
      name: "RewardReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardReader__factory>;
    getContractFactory(
      name: "ShortsTrackerTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortsTrackerTimelock__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "VaultReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultReader__factory>;
    getContractFactory(
      name: "IReferralStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IReferralStorage__factory>;
    getContractFactory(
      name: "ReferralReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReferralReader__factory>;
    getContractFactory(
      name: "ReferralStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReferralStorage__factory>;
    getContractFactory(
      name: "BonusDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BonusDistributor__factory>;
    getContractFactory(
      name: "GlpBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GlpBalance__factory>;
    getContractFactory(
      name: "IRewardDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardDistributor__factory>;
    getContractFactory(
      name: "IRewardRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardRouterV2__factory>;
    getContractFactory(
      name: "IRewardTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardTracker__factory>;
    getContractFactory(
      name: "IVester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVester__factory>;
    getContractFactory(
      name: "RewardDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardDistributor__factory>;
    getContractFactory(
      name: "RewardRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardRouter__factory>;
    getContractFactory(
      name: "RewardRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardRouterV2__factory>;
    getContractFactory(
      name: "RewardTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardTracker__factory>;
    getContractFactory(
      name: "StakedGlp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakedGlp__factory>;
    getContractFactory(
      name: "StakeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeManager__factory>;
    getContractFactory(
      name: "Vester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vester__factory>;
    getContractFactory(
      name: "BaseToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseToken__factory>;
    getContractFactory(
      name: "Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bridge__factory>;
    getContractFactory(
      name: "FaucetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetToken__factory>;
    getContractFactory(
      name: "IBaseToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseToken__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "IDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDistributor__factory>;
    getContractFactory(
      name: "IGLP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGLP__factory>;
    getContractFactory(
      name: "IMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMintable__factory>;
    getContractFactory(
      name: "IUSDG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUSDG__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IYieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYieldToken__factory>;
    getContractFactory(
      name: "IYieldTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYieldTracker__factory>;
    getContractFactory(
      name: "MintableBaseToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableBaseToken__factory>;
    getContractFactory(
      name: "SnapshotToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SnapshotToken__factory>;
    getContractFactory(
      name: "TimeDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimeDistributor__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;
    getContractFactory(
      name: "USDG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDG__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;
    getContractFactory(
      name: "YieldFarm",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YieldFarm__factory>;
    getContractFactory(
      name: "YieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YieldToken__factory>;
    getContractFactory(
      name: "YieldTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YieldTracker__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
